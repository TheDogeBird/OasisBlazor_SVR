@page "/register"

@using Microsoft.AspNetCore.Authorization
@attribute [AllowAnonymous]

@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Identity
@using OasisBlazor_SVR.Areas.Identity.Pages.Account
@using OasisBlazor_SVR.Services
@using OasisBlazor_SVR.Models


@inject NavigationManager NavigationManager
@inject IApiService ApiService
@inject SignInManager<OasisUser> SignInManager
@inject UserManager<OasisUser> UserManager

<h1>Register</h1>

<EditForm Model="@registerModel" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="Email">Email</label>
        <InputText id="Email" class="form-control" @bind-Value="registerModel.Email" />
        <ValidationMessage For="@(() => registerModel.Email)" />
    </div>

    <div class="form-group">
        <label for="Password">Password</label>
        <InputText id="Password" class="form-control" type="password" @bind-Value="registerModel.Password" />
        <ValidationMessage For="@(() => registerModel.Password)" />
    </div>

    <div class="form-group">
        <label for="ConfirmPassword">Confirm password</label>
        <InputText id="ConfirmPassword" class="form-control" type="password" @bind-Value="registerModel.ConfirmPassword" />
        <ValidationMessage For="@(() => registerModel.ConfirmPassword)" />
    </div>

    <button type="submit" class="btn btn-primary">Register</button>
</EditForm>

@code {
    private RegisterModel registerModel = new RegisterModel();

    private async Task HandleValidSubmit()
    {
        var result = await ApiService.RegisterUser(registerModel);

        if (result.Succeeded)
        {
            await SignInManager.SignInAsync(await UserManager.FindByEmailAsync(registerModel.Email), isPersistent: false);
            NavigationManager.NavigateTo("/");
        }
        else
        {
            foreach (var error in result.Errors)
            {
                Console.WriteLine(error);
            }
        }
    }
}
